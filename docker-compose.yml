version: "2.4"

services:
  cloudflared:
    build:
      context: ./cloudflared
      dockerfile: ./Dockerfile
      args:
        DNS1: ${CLOUDFLARED_DNS1}
        DNS2: ${CLOUDFLARED_DNS2}
        PORT: 54054
    ports:
    - "54054:54054/tcp"
    - "54054:54054/udp"
    networks:
      network:
        ipv4_address: 10.0.0.2
        aliases:
          - constantine_cloudflared

  pihole:
    build:
      context: ./pihole
      dockerfile: ./Dockerfile
      args:
        TZ: ${TZ}
        WEBPASSWORD: ${WEBPASSWORD}
        DNS1: 10.0.0.2#53 # cloudflared IP Address
        DNS2: ${DNS2}
    volumes:
      - "pihole_data:/etc/pihole"
      - "pihole_dnsmasq_data:/etc/dnsmasq.d"
      - "/dev/null:/var/log/pihole.log:ro"
    ports:
      - "53:53/tcp"
      - "53:53/udp"
      - "67:67/udp"
      - "80:80/tcp"
    environment:
      - DNSMASQ_LISTENING=all
      - IPv6=false
      - PIHOLELOG=/dev/null
    networks:
      network:
        ipv4_address: 10.0.0.3
        aliases:
          - constantine_pihole
    dns:
      - 127.0.0.1
      - 1.1.1.1
    cap_add:
      - NET_ADMIN

  wireguard:
    build:
      context: ./wireguard
      dockerfile: ./Dockerfile
      args:
        PUID: 1000
        PGID: 1000
        TZ: ${TZ}
        PEERS: ${PEERS}
        PEERDNS: 10.0.0.3#53 #pi-hole IP Address
    volumes:
      - "wireguard_data:/config"
      - "/lib/modules:/lib/modules"
    ports:
      - "52828:51820/udp"
    cap_add:
      - NET_ADMIN
      - SYS_MODULE

networks:
  network:
    driver: bridge
    ipam:
     config:
       - subnet: 10.0.0.0/29

volumes:
  wireguard_data: {}
  pihole_data: {}
  pihole_dnsmasq_data: {}
  cloudflared_data: {}

