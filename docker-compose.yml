version: "2.4"

services:
  haproxy:
    build:
      context: ./haproxy
      dockerfile: ./Dockerfile
      args:
        BASIC_AUTH_USERNAME: ${BASIC_AUTH_USERNAME}
        BASIC_AUTH_PASSWORD: ${BASIC_AUTH_PASSWORD}
        BASIC_AUTH_REALM: ${BASIC_AUTH_REALM}
        HAPROXY_HTTP_SCHEME: ${HAPROXY_HTTP_SCHEME}
        HAPROXY_STATS_URI: ${HAPROXY_STATS_URI}
        HAPROXY_STATS_REFRESH: ${HAPROXY_STATS_REFRESH}
    container_name: constantine_haproxy
    networks:
      network:
        aliases:
          - constantine_haproxy
    expose:
      - "18081"
    ports:
      - "8080:80"
      - "18080:18080"
      - "8040:8040"
      - "13000:13000"
    cpu_shares: 104
    mem_reservation: 50m
    mem_limit: 75m

  scope:
    build:
      context: ./scope
      dockerfile: ./Dockerfile
      args:
        ENABLE_BASIC_AUTH: ${ENABLE_BASIC_AUTH}
        BASIC_AUTH_USERNAME: ${BASIC_AUTH_USERNAME}
        BASIC_AUTH_PASSWORD: ${BASIC_AUTH_PASSWORD}
    container_name: constantine_scope  
    networks:
      network:
        aliases:
          - constantine_scope
    expose:
      - "4040"
    pid: "host"
    privileged: true
    labels:
      - "works.weave.role=system"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:rw"
    command:
      - "--probe.docker=true"
      - "--weave=false"
    cpu_shares: 104
    mem_reservation: 150m
    mem_limit: 200m

  loki:
    image: grafana/loki:latest
    container_name: constantine_loki
    expose:
      - "3100"
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      network:
        aliases:
          - constantine_loki
    cpu_shares: 104
    mem_reservation: 150m
    mem_limit: 200m
    
  promtail:
    image: grafana/promtail:latest
    container_name: constantine_promtail
    volumes:
      - /var/log:/var/log
    command: -config.file=/etc/promtail/docker-config.yaml
    networks:
      network:
        aliases:
          - constantine_promtail
    cpu_shares: 104
    mem_reservation: 50m
    mem_limit: 75m

  grafana:
    build:
      context: ./grafana
      dockerfile: ./Dockerfile
      args:
        GF_SECURITY_ADMIN_PASSWORD: ${GF_SECURITY_ADMIN_PASSWORD}
    container_name: constantine_grafana
    volumes:
      - "grafana_data:/var/lib/grafana:rw"
    expose:
      - "3000"
    networks:
      network:
        aliases:
          - constantine_grafana
    cpu_shares: 104
    mem_reservation: 50m
    mem_limit: 75m 

  prometheus:
    build:
      context: ./prometheus
      dockerfile: ./Dockerfile
    volumes:
      - "prometheus_data:/var/lib/prometheus:rw"
    expose:
    - "9090"
    networks:
      network:
        aliases:
          - constantine_prometheus
    cpu_shares: 104
    mem_reservation: 50m
    mem_limit: 75m

  cloudflared:
    build:
      context: ./cloudflared
      dockerfile: ./Dockerfile
      args:
        DNS1: ${CLOUDFLARED_DNS1}
        DNS2: ${CLOUDFLARED_DNS2}
        PORT: 54054
    ports:
    - "54054:54054/tcp"
    - "54054:54054/udp"
    networks:
      network:
        aliases:
          - constantine_cloudflared

  pihole:
    build:
      context: ./pihole
      dockerfile: ./Dockerfile
      args:
        TZ: ${TZ}
        WEBPASSWORD: ${WEBPASSWORD}
        DNS1: ${DNS1}
        DNS2: ${DNS2}
    volumes:
      - "pihole_data:/etc/pihole"
      - "pihole_dnsmasq_data:/etc/dnsmasq.d"
    ports:
      - "53:53/tcp"
      - "53:53/udp"
      - "67:67/udp"
      - "8081:80/tcp"
      - "8443:443/tcp"
    environment:
      - DNSMASQ_LISTENING=all
      - IPv6=false
    networks:
      network:
        aliases:
          - constantine_pihole
    dns:
      - 127.0.0.1
      - 1.1.1.1
    cap_add:
      - NET_ADMIN

networks:
  network:
    driver: bridge

volumes:
  grafana_data: {}
  prometheus_data: {}
  wireguard_data: {}
  pihole_data: {}
  pihole_dnsmasq_data: {}
  cloudflared_data: {}

